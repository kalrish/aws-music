---
AWSTemplateFormatVersion: '2010-09-09'
Resources:
   BuildRole:
      Type: 'AWS::IAM::Role'
      Properties:
         AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Principal:
                     Service: 'codebuild.amazonaws.com'
                  Action: 'sts:AssumeRole'
                  Effect: Allow
         Policies:
            -
               PolicyName: ecr-push
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 'ecr:BatchCheckLayerAvailability'
                           - 'ecr:CompleteLayerUpload'
                           - 'ecr:GetAuthorizationToken'
                           - 'ecr:InitiateLayerUpload'
                           - 'ecr:PutImage'
                           - 'ecr:UploadLayerPart'
                        Resource: '*'
                        Effect: Allow
            -
               PolicyName: s3-cache
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 's3:GetObject'
                           - 's3:PutObject'
                        Resource: !Join [ '/', [ !GetAtt CacheBucket.Arn, '*' ] ]
                        Effect: Allow
   BuildLogsPolicy:
      Type: 'AWS::IAM::Policy'
      Properties:
         PolicyName: logs
         PolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Action:
                     - 'logs:CreateLogGroup'
                     - 'logs:CreateLogStream'
                     - 'logs:PutLogEvents'
                  Resource: !Join [ '', [ 'arn:aws:logs:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':log-group:/aws/codebuild/', !Ref BuildProject , ':*' ] ]
                  Effect: Allow
         Roles:
            - !Ref BuildRole
   ContainerRepository:
      Type: 'AWS::ECR::Repository'
      Properties:
         RepositoryName: music-env
         RepositoryPolicyText:
            Version: '2012-10-17'
            Statement:
               -
                  Sid: AllowPush
                  Principal:
                     AWS:
                        - !GetAtt BuildRole.Arn
                  Action:
                     - 'ecr:BatchCheckLayerAvailability'
                     - 'ecr:CompleteLayerUpload'
                     - 'ecr:GetAuthorizationToken'
                     - 'ecr:InitiateLayerUpload'
                     - 'ecr:PutImage'
                     - 'ecr:UploadLayerPart'
                  Effect: Allow
               -
                  Sid: AllowPull
                  Principal:
                     Service: 'codebuild.amazonaws.com'
                  Action:
                     - 'ecr:BatchCheckLayerAvailability'
                     - 'ecr:BatchGetImage'
                     - 'ecr:GetDownloadUrlForLayer'
                  Effect: Allow
   CacheBucket:
      Type: 'AWS::S3::Bucket'
   CacheBucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
         Bucket: !Ref CacheBucket
         PolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Effect: Allow
                  Action:
                     - 's3:GetObject'
                     - 's3:PutObject'
                  Resource: !Join [ '/', [ !GetAtt CacheBucket.Arn, '*' ] ]
                  Principal:
                     AWS: !GetAtt BuildRole.Arn
   BuildProject:
      Type: 'AWS::CodeBuild::Project'
      Properties:
         Name: music-env
         Description: 'Build CodeBuild environments to compile music collections.'
         ServiceRole: !GetAtt BuildRole.Arn
         Source:
            Type: GITHUB
            Location: 'https://github.com/kalrish/aws-music.git'
            GitCloneDepth: 1
            BuildSpec: 'codebuild/buildspec-env.yaml'
         Environment:
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_SMALL
            Image: 'aws/codebuild/docker:17.09.0'
            PrivilegedMode: true
            EnvironmentVariables:
               -
                  Name: REPOSITORY
                  Type: PLAINTEXT
                  Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/music-env'
         Cache:
            Type: S3
            Location: !Ref CacheBucket
         Artifacts:
            Type: NO_ARTIFACTS
