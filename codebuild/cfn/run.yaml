---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
   Profile:
      Type: String
      Description: Name of the profile.
   BuildComputeType:
      Type: String
      Description: Type of the build instance.
      AllowedValues:
         - BUILD_GENERAL1_SMALL
         - BUILD_GENERAL1_MEDIUM
         - BUILD_GENERAL1_LARGE
      Default: BUILD_GENERAL1_SMALL
Resources:
   BuildRole:
      Type: 'AWS::IAM::Role'
      Properties:
         AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Principal:
                     Service: 'codebuild.amazonaws.com'
                  Action: 'sts:AssumeRole'
                  Effect: Allow
         Policies:
            -
               PolicyName: ecr-pull
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 'ecr:GetDownloadUrlForLayer'
                           - 'ecr:BatchGetImage'
                           - 'ecr:BatchCheckLayerAvailability'
                        Resource: '*'
                        Effect: Allow
            -
               PolicyName: s3-source
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 's3:ListBucket'
                        Resource: !ImportValue music-SourceBucketArn
                        Effect: Allow
                     -
                        Action:
                           - 's3:GetObject'
                        Resource: !Join [ '/', [ !ImportValue music-SourceBucketArn, '*' ] ]
                        Effect: Allow
            -
               PolicyName: parameters
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 'ssm:GetParameter'
                        Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/music/profiles/${Profile}/*'
                        Effect: Allow
            -
               PolicyName: s3-cache
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 's3:GetObject'
                           - 's3:PutObject'
                        Resource: !Join [ '/', [ !GetAtt CacheBucket.Arn, '*' ] ]
                        Effect: Allow
            -
               PolicyName: s3-artifacts
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 's3:PutObject'
                        Resource: !Join [ '/', [ !GetAtt ArtifactsBucket.Arn, '*' ] ]
                        Effect: Allow
   BuildLogsPolicy:
      Type: 'AWS::IAM::Policy'
      Properties:
         PolicyName: logs
         PolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Action:
                     - 'logs:CreateLogGroup'
                     - 'logs:CreateLogStream'
                     - 'logs:PutLogEvents'
                  Resource: !Join [ '', [ 'arn:aws:logs:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':log-group:/aws/codebuild/', !Ref BuildProject , ':*' ] ]
                  Effect: Allow
         Roles:
            - !Ref BuildRole
   ConfigParameter:
      Type: 'AWS::SSM::Parameter'
      Properties:
         Name: !Join [ '/', [ '/music', 'profiles', !Ref Profile, 'config' ] ]
         Type: String
         Value: "\n"
   CacheBucket:
      Type: 'AWS::S3::Bucket'
   CacheBucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
         Bucket: !Ref CacheBucket
         PolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Effect: Allow
                  Action:
                     - 's3:GetObject'
                     - 's3:PutObject'
                  Resource: !Join [ '/', [ !GetAtt CacheBucket.Arn, '*' ] ]
                  Principal:
                     AWS: !GetAtt BuildRole.Arn
   ArtifactsBucket:
      Type: 'AWS::S3::Bucket'
   ArtifactsBucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
         Bucket: !Ref ArtifactsBucket
         PolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Effect: Allow
                  Action:
                     - 's3:PutObject'
                  Resource: !Join [ '/', [ !GetAtt ArtifactsBucket.Arn, '*' ] ]
                  Principal:
                     AWS: !GetAtt BuildRole.Arn
   ArtifactsParameter:
      Type: 'AWS::SSM::Parameter'
      Properties:
         Name: !Sub '/music/profiles/${Profile}/artifacts'
         Type: String
         Value: !Ref ArtifactsBucket
   BuildProject:
      Type: 'AWS::CodeBuild::Project'
      Properties:
         Name: !Join [ '-', [ 'music', 'run', !Ref Profile ] ]
         Description: 'Compile music collections.'
         ServiceRole: !GetAtt BuildRole.Arn
         Source:
            Type: GITHUB
            Location: 'https://github.com/kalrish/aws-music.git'
            GitCloneDepth: 1
            BuildSpec: 'codebuild/buildspec-run.yaml'
         Environment:
            Type: LINUX_CONTAINER
            ComputeType: !Ref BuildComputeType
            Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/music-env'
            PrivilegedMode: true
            EnvironmentVariables:
               -
                  Name: SOURCE_BUCKET
                  Type: PLAINTEXT
                  Value: !ImportValue music-SourceBucket
               -
                  Name: PROFILE
                  Type: PLAINTEXT
                  Value: !Ref Profile
         Cache:
            Type: S3
            Location: !Ref CacheBucket
         Artifacts:
            Type: S3
            Location: !Ref ArtifactsBucket
            Packaging: NONE
