---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
   Profile:
      Type: String
      Description: Name of the profile.
   BuildComputeType:
      Type: String
      Description: Type of the build instance.
      AllowedValues:
         - BUILD_GENERAL1_SMALL
         - BUILD_GENERAL1_MEDIUM
         - BUILD_GENERAL1_LARGE
      Default: BUILD_GENERAL1_SMALL
   CodeRepositoryLocation:
      Description: 'Location of the build code.'
      Type: String
      AllowedValues:
         - GitHub
         - CodeCommit
      Default: GitHub
Mappings:
   CodeRepositoryMap:
      Location:
         GitHub: GITHUB
         CodeCommit: CODECOMMIT
Conditions:
   CodeRepositoryLocationCodeCommit: !Equals [ !Ref CodeRepositoryLocation , 'CodeCommit' ]
Resources:
   BuildRole:
      Type: 'AWS::IAM::Role'
      Properties:
         AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Principal:
                     Service: 'codebuild.amazonaws.com'
                  Action: 'sts:AssumeRole'
                  Effect: Allow
         Policies:
            -
               PolicyName: ecr-pull
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 'ecr:GetDownloadUrlForLayer'
                           - 'ecr:BatchGetImage'
                           - 'ecr:BatchCheckLayerAvailability'
                        Resource: '*'
                        Effect: Allow
            -
               PolicyName: s3-source
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 's3:ListBucket'
                        Resource: !ImportValue vibes-SourcesBucketArn
                        Effect: Allow
                     -
                        Action:
                           - 's3:GetObject'
                        Resource: !Join [ '/', [ !ImportValue vibes-SourcesBucketArn, '*' ] ]
                        Effect: Allow
            -
               PolicyName: parameters
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 'ssm:GetParameter'
                        Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/vibes/profiles/${Profile}'
                        Effect: Allow
            -
               PolicyName: s3-cache
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 's3:GetObject'
                           - 's3:PutObject'
                        Resource: !Sub '${CacheBucket.Arn}/*'
                        Effect: Allow
            -
               PolicyName: s3-artifacts
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Action:
                           - 's3:PutObject'
                        Resource: !Sub '${ArtifactsBucket.Arn}/*'
                        Effect: Allow
   BuildLogsPolicy:
      Type: 'AWS::IAM::Policy'
      Properties:
         PolicyName: logs
         PolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Action:
                     - 'logs:CreateLogGroup'
                     - 'logs:CreateLogStream'
                     - 'logs:PutLogEvents'
                  Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProject}:*'
                  Effect: Allow
         Roles:
            - !Ref BuildRole
   CodeCommitPolicy:
      Condition: CodeRepositoryLocationCodeCommit
      Type: 'AWS::IAM::Policy'
      Properties:
         PolicyName: codecommit-pull
         PolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Action:
                     - 'codecommit:GitPull'
                  Resource: !ImportValue vibes-CodeRepositoryArn
                  Effect: Allow
         Roles:
            - !Ref BuildRole
   CacheBucket:
      Type: 'AWS::S3::Bucket'
   CacheBucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
         Bucket: !Ref CacheBucket
         PolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Principal:
                     AWS: !GetAtt BuildRole.Arn
                  Action:
                     - 's3:GetObject'
                     - 's3:PutObject'
                  Resource: !Sub '${CacheBucket.Arn}/*'
                  Effect: Allow
   ArtifactsBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
         Tags:
            -
               Key: vibes
               Value: artifacts
            -
               Key: profile
               Value: !Ref Profile
   ArtifactsBucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
         Bucket: !Ref ArtifactsBucket
         PolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Principal:
                     AWS: !GetAtt BuildRole.Arn
                  Action:
                     - 's3:PutObject'
                  Resource: !Sub '${ArtifactsBucket.Arn}/*'
                  Effect: Allow
   ArtifactsParameter:
      Type: 'AWS::SSM::Parameter'
      Properties:
         Name: !Sub '/vibes/codebuild/artifacts/${Profile}'
         Type: String
         Value: !Ref ArtifactsBucket
   BuildProject:
      Type: 'AWS::CodeBuild::Project'
      Properties:
         Name: !Sub 'vibes-codebuild-run-${Profile}'
         Description: !Sub 'Compile music collection after the ${Profile} profile.'
         ServiceRole: !GetAtt BuildRole.Arn
         Source:
            Type: !FindInMap [ CodeRepositoryMap , Location , !Ref CodeRepositoryLocation ]
            Location: !ImportValue vibes-CodeRepositoryCloneUrlHttp
            GitCloneDepth: 1
            BuildSpec: 'codebuild/run/buildspec.yaml'
         Environment:
            Type: LINUX_CONTAINER
            ComputeType: !Ref BuildComputeType
            Image: !Sub
               - '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ContainerRepository}'
               - {
                    ContainerRepository: !ImportValue vibes-codebuild-ContainerRepository
                 }
            PrivilegedMode: true
            EnvironmentVariables:
               -
                  Name: SOURCE_BUCKET
                  Type: PLAINTEXT
                  Value: !ImportValue vibes-SourcesBucket
               -
                  Name: PROFILE
                  Type: PLAINTEXT
                  Value: !Ref Profile
         Cache:
            Type: S3
            Location: !Ref CacheBucket
         Artifacts:
            Type: S3
            Location: !Ref ArtifactsBucket
            Packaging: NONE
