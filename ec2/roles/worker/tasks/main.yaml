---
- name: Update system software
  pacman:
     update_cache: yes
     upgrade: yes
- name: Install required packages
  pacman:
     name: '{{ item }}'
     state: present
  with_items:
     - e2fsprogs
     - f2fs-tools
     - flac
     - git
     - lame
     - opus-tools
     - tup
     - vorbis-tools
     - xfsprogs
- name: Enable full dependency tracking for tup
  file:
     path: /usr/bin/tup
     mode: +s
- name: Install pip
  script: get-pip.py
- name: Install AWS CLI
  pip:
     name: awscli
     state: present
- name: Determine systemd mount unit name
  command: 'systemd-escape --path {{ mount_point }}'
  register: mount_unit_name
- name: Upload systemd mount unit
  template:
     src: 'music.mount.j2'
     dest: '/etc/systemd/system/{{ mount_unit_name.stdout }}.mount'
     owner: root
     group: root
     mode: u=rw,g=r,o=r
- name: Upload systemd service unit
  template:
     src: 'music.service.j2'
     dest: '/etc/systemd/system/music.service'
     owner: root
     group: root
     mode: u=rw,g=r,o=r
- name: Enable tup monitor service
  systemd:
     name: music
     enabled: yes
- name: Format source EBS volume
  filesystem:
     dev: '{{ dev }}'
     fstype: '{{ source_fs_type }}'
- name: Format build EBS volume
  filesystem:
     dev: '{{ dev }}'
     fstype: '{{ build_fs_type }}'
- name: Create source volume mount point
  file:
     path: '{{ mount_point }}'
     state: directory
     owner: music
     group: music
     mode: u=r,g=r
- name: Create build volume mount point
  file:
     path: '{{ mount_point }}'
     state: directory
     owner: music
     group: music
     mode: u=rw,g=r
- name: Mount EBS volume
  mount:
     state: mounted
     src: '{{ dev }}'
     fstype: '{{ fs_type }}'
     path: '{{ mount_point }}'
     boot: no
- name: Initialize tup database
  command: tup init
  args:
     chdir: '{{ mount_point }}'
  become_user: music
- name: Upload tup settings for music project
  copy:
     src: tup.ini
     dest: '{{ mount_point }}/.tup/options'
  become_user: music
- name: Download build code
  git:
     repo: '{{ source_repository }}'
     dest: '{{ tupcode_directory }}'
     clone: yes
  become_user: music
- name: Unmount EBS volume
  mount:
     state: unmounted
     path: '{{ mount_point }}'
